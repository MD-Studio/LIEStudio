{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "http://liestudio/schemas/workflowtask.json",
    "title": "Task",
    "description": "Workflow Task schema",
    "type": "object",
    "properties": {
        "active": {
            "description": "Is the current task active or not",
            "type": "boolean",
            "default": false
        },
        "breakpoint": {
            "description": "Add a breakpoint for the task. The workflow will only continue if explicitly instructed",
            "type": "boolean",
            "default": false
        },
        "configuration": {
            "description": "Configuration key/value pairs for the task",
            "type": "object",
            "default": {}
        },
        "input": {
            "description": "Input for the task",
            "type": "object"    
        },
        "output": {
            "description": "Output returned by the task",
            "type": "object"    
        },
        "replace_output": {
            "description": "Number of times the task should be resubmitted when it failed",
            "type": "boolean",
            "default": false
        },
        "retry_count": {
            "description": "Number of times the task should be resubmitted when it failed",
            "type": "integer",
            "default": 0
        },
        "status": {
            "description": "The status of the current task",
            "type": "string",
            "default": "ready",
            "enum": ["ready","submitted","running","failed","aborted","completed","deactivated"]
        },
        "task_id": {
            "type": "string",
            "description": "Unique ID used to identify the task in the system"
        },
        "uri": {
            "type": "string",
            "description": "LIEStudio microservice method uri",
            "pattern": "^\\w+(\\.\\w+)*$",
            "default": "liestudio.default.task"
        },
        "class": {
            "type": "string",
            "description": "Custom Python function to run in a (local) task runner",
            "pattern": "^\\w+(\\.\\w+)*$"
        }
    },
    "required": ["active", "breakpoint", "retry_count", "status", "uri"]
}